{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Slutprojekt/Final-project/frontend/src/components/GameControls.js\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { games } from '../reducers/games';\nexport const GameControls = () => {\n  const dispatch = useDispatch();\n\n  const onGameGenerate = () => {\n    dispatch(games.actions.generateGame());\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onGameGenerate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"NEXT\");\n}; // On click handler generates new directions. \n// How do I make It random? \n// Button should be disabled until correct answer has been added. \n// fetch('')\n//         .then(res => res.json())\n//         .then(data => console.log(data))","map":{"version":3,"sources":["/Users/apple/Desktop/Slutprojekt/Final-project/frontend/src/components/GameControls.js"],"names":["React","useDispatch","games","GameControls","dispatch","onGameGenerate","actions","generateGame"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;;AAEA,QAAMI,cAAc,GAAG,MAAM;AACzBD,IAAAA,QAAQ,CAACF,KAAK,CAACI,OAAN,CAAcC,YAAd,EAAD,CAAR;AACH,GAFD;;AAIA,sBACI;AAAQ,IAAA,OAAO,EAAEF,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,CAZM,C,CAcP;AACA;AAEA;AAEA;AACA;AACA","sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { games } from '../reducers/games'\n\nexport const GameControls = () => {\n    const dispatch = useDispatch()\n\n    const onGameGenerate = () => {\n        dispatch(games.actions.generateGame())\n    }\n\n    return (\n        <button onClick={onGameGenerate}>\n             NEXT  \n        </button>\n    )\n}\n\n// On click handler generates new directions. \n// How do I make It random? \n\n// Button should be disabled until correct answer has been added. \n\n// fetch('')\n//         .then(res => res.json())\n//         .then(data => console.log(data))"]},"metadata":{},"sourceType":"module"}